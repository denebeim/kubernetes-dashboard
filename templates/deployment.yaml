{{ template "kubernetes-dashboard.appsV1" }}
kind: Deployment
metadata:
  labels:
    k8s-app: {{ include "kubernetes-dashboard.fullname" . }}
  name: {{ include "kubernetes-dashboard.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: {{ include "kubernetes-dashboard.fullname" . }}
  template:
    metadata:
      labels:
        k8s-app: {{ include "kubernetes-dashboard.fullname" . }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image:  "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
            - containerPort: 8443
              protocol: TCP
          args:
            - --auto-generate-certificates
            - --namespace={{ .Release.Namespace }}
{{- if .Values.extraArgs }}
{{ toYaml .Values.extraArgs | indent 12 }}
{{- end }}
{{- with .Values.extraEnv }}
env:
{{ toYaml . | indent 10 }}
{{- end }}
            # Uncomment the following line to manually specify Kubernetes API server Host
            # If not specified, Dashboard will attempt to auto discover the API server and connect
            # to it. Uncomment only if the default does not work.
            # - --apiserver-host=http://my-address:port
          volumeMounts:
            - name: {{ include "kubernetes-dashboard.fullname" . }}-certs
              mountPath: /certs
              # Create on-disk volume to store exec logs
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: 8443
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      volumes:
        - name: {{ include "kubernetes-dashboard.fullname" . }}-certs
          secret:
            secretName: kubernetes-dashboard-certs
        - name: tmp-volume
          emptyDir: {}
      serviceAccountName: {{ include "kubernetes-dashboard.fullname" . }}
      nodeSelector:
        "beta.kubernetes.io/os": linux
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule

---

{{ template "kubernetes-dashboard.appsV1" }}
kind: Deployment
metadata:
  labels:
    k8s-app: {{ include "kubernetes-dashboard.fullname" . }}-metrics-scraper
  name: {{ include "kubernetes-dashboard.fullname" . }}-metrics-scraper
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:

      k8s-app: {{ include "kubernetes-dashboard.fullname" . }}-metrics-scraper
  template:
    metadata:
      labels:
        k8s-app: {{ include "kubernetes-dashboard.fullname" . }}-metrics-scraper
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'
    spec:
      containers:
        - name: dashboard-metrics-scraper
          image:  "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
          imagePullPolicy: "{{ .Values.metrics.image.pullPolicy }}"
          ports:
            - containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      serviceAccountName: {{ include "kubernetes-dashboard.fullname" . }}
      nodeSelector:
        "beta.kubernetes.io/os": linux
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      volumes:
        - name: tmp-volume
          emptyDir: {}
